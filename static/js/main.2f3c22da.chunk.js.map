{"version":3,"sources":["components/redux/phonebook/phonebook-actions.js","components/AuthNav/AuthNav.module.scss","components/redux/auth/auth-reducer.js","components/UserMenu/UM.module.scss","components/redux/auth/auth-operations.js","components/redux/auth/auth-actions.js","components/AppBar/AppBar.module.scss","components/Container/Container.module.scss","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/Container/Container.js","components/PrivaeRoute.js","components/PublicRoute.js","App.js","reportWebVitals.js","components/redux/phonebook/phonebook-reducer.js","components/redux/store.js","index.js","components/redux/auth/auth-selectors.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","module","exports","initialUserState","name","email","user","createReducer","authActions","registerSuccess","state","payload","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","error","registerError","loginError","logoutError","getCurrentUserError","isLogIn","combineReducers","axios","defaults","baseURL","console","log","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","message","logIn","loginRequest","logOut","logoutRequest","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","connect","isAuthenticated","authSelectors","getIsAuthenticatad","to","exact","className","styles","link","activeClassName","activeLink","mapDispatchToProps","onLogout","authOperations","getUserEmail","text","button","type","onClick","AuthNav","header","Container","children","container","Component","component","routeProps","render","props","restricted","HomeView","lazy","LoginView","Phonebook","RegisterView","useEffect","fallback","path","PrivaeRoute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","contacts","find","alert","filter","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whiteList","store","configureStore","reducer","phonebook","phonebookReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f3c22da.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"phonebook/fetchContacstRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"phonebook/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"phonebookfetchContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"phonebook/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"phonebook/addContactSuccess\");\r\nexport const addContactError = createAction(\"phonebook/addContactError\");\r\n// export const del = createAction(\"phonebook/delete\");\r\nexport const deleteContactRequest = createAction(\r\n  \"phonebook/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"phonebook/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"phonebook/deleteContactError\");\r\n\r\nexport const changeFilter = createAction(\"phonebook/changeFilter\");\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__27xaY\",\"activeLink\":\"AuthNav_activeLink__928PJ\"};","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport authActions from \"./auth-actions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (state, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (state, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (state, { payload }) => payload,\r\n});\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (state, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (state, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (state, { payload }) => payload,\r\n  [authActions.loginError]: (state, { payload }) => payload,\r\n  [authActions.logoutError]: (state, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (state, { payload }) => payload,\r\n});\r\n\r\nconst isLogIn = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\nexport default combineReducers({\r\n  user,\r\n  isLogIn,\r\n  token,\r\n  error,\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"UM_button__y1ooq\",\"text\":\"UM_text__1U2-Q\"};","import axios from \"axios\";\r\nimport authActions from \"./auth-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\nconsole.log(axios.defaults);\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n    token.set(response.data.token);\r\n    // console.log(response);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\nconst logIn = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n    token.set(response.data.token);\r\n    // console.log(response);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n    // console.log(response);\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const registerRequest = createAction(\"auth/registerRequest\");\r\nexport const registerSuccess = createAction(\"auth/registerSuccess\");\r\nexport const registerError = createAction(\"auth/registerError\");\r\n\r\nexport const loginRequest = createAction(\"auth/loginRequest\");\r\nexport const loginSuccess = createAction(\"auth/loginSuccess\");\r\nexport const loginError = createAction(\"auth/loginError\");\r\n\r\nexport const logoutRequest = createAction(\"auth/logoutRequest\");\r\nexport const logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nexport const logoutError = createAction(\"auth/logoutError\");\r\n\r\nexport const getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nexport const getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nexport const getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2t9Yu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1P7tt\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { authSelectors } from \"../redux/auth\";\r\nimport styles from \"../AuthNav/AuthNav.module.scss\";\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink\r\n      to=\"/\"\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Homepage\r\n    </NavLink>\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticatad(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Navigation);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\nimport { authOperations } from \"../redux/auth\";\r\nimport styles from \"./UM.module.scss\";\r\n\r\nconst UserMenu = ({ email, onLogout }) => (\r\n  <div>\r\n    <span className={styles.text}>{email}</span>\r\n    <button className={styles.button} type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\nconst mapStateToProps = (state) => ({\r\n  email: authSelectors.getUserEmail(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./AuthNav.module.scss\";\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Register\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\nexport default AuthNav;\r\n","import React from \"react\";\r\n// import { connect } from \"react-redux\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport UserMenu from \"../UserMenu/UserMenu\";\r\nimport AuthNav from \"../AuthNav/AuthNav\";\r\nimport styles from \"./AppBar.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header className={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\n//\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticatad(state),\r\n});\r\nexport default connect(mapStateToProps, null)(AppBar);\r\n","import React from \"react\";\r\nimport styles from \"./Container.module.scss\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\nexport default Container;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { authSelectors } from \"./redux/auth\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticatad(state),\r\n});\r\nexport default connect(mapStateToProps, null)(PrivateRoute);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { authSelectors } from \"./redux/auth\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to=\"/\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticatad(state),\r\n});\r\nexport default connect(mapStateToProps, null)(PublicRoute);\r\n","import React, { useEffect, Suspense, lazy } from \"react\";\nimport { Switch, Redirect } from \"react-router-dom\";\nimport AppBar from \"./components/AppBar/AppBar\";\nimport Container from \"./components/Container\";\nimport { authOperations } from \"./components/redux/auth\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport PrivaeRoute from \"./components/PrivaeRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\n\nconst HomeView = lazy(() => import(\"./components/views/HomeView\"));\nconst LoginView = lazy(() => import(\"./components/views/LoginView\"));\nconst Phonebook = lazy(() => import(\"./components/views/PhonebookView\"));\nconst RegisterView = lazy(() => import(\"./components/views/RegisterView\"));\n\nfunction App({ getCurrentUser }) {\n  useEffect(() => {\n    getCurrentUser();\n  }, [getCurrentUser]);\n  return (\n    <Container>\n      <AppBar />\n      <Suspense fallback={<p>Please, wait...</p>}>\n        <Switch>\n          <PublicRoute exact path=\"/\" component={HomeView} />\n          <PublicRoute restricted path=\"/register\" component={RegisterView} />\n          <PublicRoute restricted path=\"/login\" component={LoginView} />\n          <PrivaeRoute path=\"/contacts\" component={Phonebook} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n}\n\nconst mapDispatchToProps = {\n  getCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n} from \"./phonebook-actions.js\";\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactsSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    if (state.find(({ name }) => name === payload.name)) {\r\n      alert(`${payload.name}  is alredy in contacts`);\r\n    }\r\n    return [...state, payload];\r\n  },\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (state, { type, payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./auth/auth-reducer\";\r\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n// import logger from \"redux-logger\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whiteList: [\"token\"],\r\n};\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\nconst persistor = persistStore(store);\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./components/redux/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const getIsAuthenticatad = (state) => state.auth.isLogIn;\r\nconst getUserEmail = (state) => state.auth.user.email;\r\nexport default { getIsAuthenticatad, getUserEmail };\r\n"],"sourceRoot":""}