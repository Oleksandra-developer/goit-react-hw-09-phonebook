{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Form/Form.module.css","components/container.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/redux/phonebook/phonebook-operation.js","components/Form/Form.js","components/redux/phonebook/contacts-selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/views/PhonebookView/Phonebook.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","axios","defaults","baseURL","connect","dispatch","onSubmit","name","number","contact","addContactRequest","post","then","data","addContactSuccess","catch","error","addContactError","message","addContact","useState","setName","setNumber","handleChange","e","target","className","styles","addForm","preventDefault","console","log","type","pattern","title","required","onChange","getPhonebookFilter","state","phonebook","filter","getLoading","loading","getVisibleContacts","createSelector","contacts","normalizedFilter","toLowerCase","includes","onDeleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","ContactList","map","ContactsList__btn","onClick","changeFilter","label","input","isLoadingContacts","fetchContacts","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","useEffect","container"],"mappings":"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","file":"static/js/3.d46a40dd.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addForm\":\"Form_addForm__1rwUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3CADa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__5_97_\",\"ContactsList__btn\":\"ContactList_ContactsList__btn__S11Av\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2I69i\",\"input\":\"Filter_input__1Yfhu\"};","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./phonebook-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactsError(error.message)));\r\n};\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  (dispatch) => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n      .post(\"/contacts\", contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch((error) => dispatch(addContactError(error.message)));\r\n  };\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error.message)));\r\n};\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n// export default { addContact };\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./Form.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addContact } from \"../redux/phonebook/phonebook-operation\";\r\n\r\nfunction Form({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    // setName(e.target.value);\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    console.log(\"Submit success!\");\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className={styles.addForm} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          value={name}\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          onChange={handleChange}\r\n          value={number}\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: ({ name, number }) => {\r\n    dispatch(addContact({ name, number }));\r\n  },\r\n});\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getPhonebookFilter = (state) => state.phonebook.filter;\r\n\r\nexport const getLoading = (state) => state.phonebook.loading;\r\n\r\nconst getAllContacts = (state) => state.phonebook.contacts;\r\nexport const getVisibleContacts = createSelector(\r\n  [getAllContacts, getPhonebookFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../redux/phonebook/phonebook-operation\";\r\nimport { getVisibleContacts } from \"../redux/phonebook/contacts-selectors\";\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.ContactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.ContactsList__btn}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { contacts: getVisibleContacts(state) };\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(deleteContact(id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../redux/phonebook/phonebook-actions\";\r\nimport { getPhonebookFilter } from \"../redux/phonebook/contacts-selectors\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  value: getPhonebookFilter(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { useEffect } from \"react\";\r\nimport Form from \"../../Form\";\r\nimport styles from \"../../container.module.css\";\r\nimport ContactsList from \"../../ContactList\";\r\nimport Filter from \"../../Filter\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLoading } from \"../../redux/phonebook/contacts-selectors\";\r\nimport { fetchContacts } from \"../../redux/phonebook/phonebook-operation\";\r\n\r\nconst PhonebookView = ({ fetchContacts }, { isLoadingContacts }) => {\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, [fetchContacts]);\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <h1>Phonebook</h1>\r\n      {isLoadingContacts && <h1>Downloading...</h1>}\r\n      <Form />\r\n      <h2>Contact List</h2>\r\n      <Filter />\r\n      <ContactsList />\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoadingContacts: getLoading(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookView);\r\n"],"sourceRoot":""}