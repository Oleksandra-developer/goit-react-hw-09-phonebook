{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Form/Form.module.css","components/container.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/phonebook/contacts-selectors.js","redux/phonebook/phonebook-operation.js","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/views/PhonebookView/Phonebook.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","getPhonebookFilter","state","phonebook","filter","getLoading","loading","getAllContacts","contacts","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","axios","defaults","baseURL","Form","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","handleSubmit","useCallback","preventDefault","map","alert","addContactRequest","post","then","data","addContactSuccess","catch","error","addContactError","message","addContact","className","styles","addForm","onSubmit","type","pattern","title","required","onChange","connect","onDeleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","ContactList","ContactsList__btn","onClick","Filter","label","input","changeFilter","PhonebookView","isLoadingContacts","useEffect","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","container"],"mappings":"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","file":"static/js/3.a93beeaf.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addForm\":\"Form_addForm__1rwUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3CADa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__5_97_\",\"ContactsList__btn\":\"ContactList_ContactsList__btn__S11Av\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2I69i\",\"input\":\"Filter_input__1Yfhu\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getPhonebookFilter = (state) => state.phonebook.filter;\r\n\r\nexport const getLoading = (state) => state.phonebook.loading;\r\n\r\nexport const getAllContacts = (state) => state.phonebook.contacts;\r\nexport const getVisibleContacts = createSelector(\r\n  [getAllContacts, getPhonebookFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./phonebook-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  (dispatch) => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n      .post(\"/contacts\", contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch((error) => dispatch(addContactError(error.message)));\r\n  };\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error.message)));\r\n};\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n// export default { addContact };\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styles from \"./Form.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getAllContacts } from \"../../redux/phonebook/contacts-selectors\";\r\nimport { addContact } from \"../../redux/phonebook/phonebook-operation\";\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const contacts = useSelector(getAllContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    // setName(e.target.value);\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      const names = contacts.map((contact) => contact.name);\r\n      names.includes(name)\r\n        ? alert(`${name}  is alredy in contacts`)\r\n        : dispatch(addContact({ name, number }));\r\n      reset();\r\n    },\r\n    [dispatch, contacts, name, number]\r\n  );\r\n\r\n  return (\r\n    <form className={styles.addForm} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          value={name}\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          onChange={handleChange}\r\n          value={number}\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/phonebook/phonebook-operation\";\r\nimport { getVisibleContacts } from \"../../redux/phonebook/contacts-selectors\";\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.ContactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.ContactsList__btn}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { contacts: getVisibleContacts(state) };\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(deleteContact(id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/phonebook/phonebook-actions\";\r\nimport { getPhonebookFilter } from \"../../redux/phonebook/contacts-selectors\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(getPhonebookFilter);\r\n  const onChange = (e) => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport Form from \"../../Form\";\r\nimport styles from \"../../container.module.css\";\r\nimport ContactsList from \"../../ContactList\";\r\nimport Filter from \"../../Filter\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLoading } from \"../../../redux/phonebook/contacts-selectors\";\r\nimport { fetchContacts } from \"../../../redux/phonebook/phonebook-operation\";\r\n\r\nexport default function PhonebookView() {\r\n  const dispatch = useDispatch();\r\n  const isLoadingContacts = useSelector(getLoading);\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <h1>Phonebook</h1>\r\n      {isLoadingContacts && <h1>Downloading...</h1>}\r\n      <Form />\r\n      <h2>Contact List</h2>\r\n      <Filter />\r\n      <ContactsList />\r\n    </section>\r\n  );\r\n}\r\n"],"sourceRoot":""}